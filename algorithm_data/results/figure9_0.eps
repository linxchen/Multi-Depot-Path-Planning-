%!PS-Adobe-2.0 EPSF-2.0
%%Title: figure9_0.eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Wed Jan  8 17:03:09 2020
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 6.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (figure9_0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (fnl)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jan  8 17:03:09 2020)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1389 754 M
4967 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1389 754 M
63 0 V
4904 0 R
-63 0 V
stroke
1233 754 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0)]
] -86.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1389 1251 M
4967 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1389 1251 M
63 0 V
4904 0 R
-63 0 V
stroke
1233 1251 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 50)]
] -86.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1389 1747 M
4967 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1389 1747 M
63 0 V
4904 0 R
-63 0 V
stroke
1233 1747 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 100)]
] -86.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1389 2244 M
4967 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1389 2244 M
63 0 V
4904 0 R
-63 0 V
stroke
1233 2244 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 150)]
] -86.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1389 2741 M
4967 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1389 2741 M
63 0 V
4904 0 R
-63 0 V
stroke
1233 2741 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 200)]
] -86.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1389 3237 M
4967 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1389 3237 M
63 0 V
4904 0 R
-63 0 V
stroke
1233 3237 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 250)]
] -86.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1389 3734 M
38 0 V
2823 0 R
2106 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1389 3734 M
63 0 V
4904 0 R
-63 0 V
stroke
1233 3734 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 300)]
] -86.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1389 4230 M
38 0 V
2823 0 R
2106 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1389 4230 M
63 0 V
4904 0 R
-63 0 V
stroke
1233 4230 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 350)]
] -86.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1389 4727 M
4967 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1389 4727 M
63 0 V
4904 0 R
-63 0 V
stroke
1233 4727 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 400)]
] -86.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1389 754 M
0 3973 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1389 754 M
0 63 V
0 3910 R
0 -63 V
stroke
1389 494 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0)]
] -86.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2217 754 M
0 2927 V
0 800 R
0 246 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2217 754 M
0 63 V
0 3910 R
0 -63 V
stroke
2217 494 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 200)]
] -86.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3045 754 M
0 2927 V
0 800 R
0 246 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3045 754 M
0 63 V
0 3910 R
0 -63 V
stroke
3045 494 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 400)]
] -86.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3873 754 M
0 2927 V
0 800 R
0 246 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3873 754 M
0 63 V
0 3910 R
0 -63 V
stroke
3873 494 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 600)]
] -86.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4700 754 M
0 3973 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4700 754 M
0 63 V
0 3910 R
0 -63 V
stroke
4700 494 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 800)]
] -86.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5528 754 M
0 3973 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5528 754 M
0 63 V
0 3910 R
0 -63 V
stroke
5528 494 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 1000)]
] -86.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6356 754 M
0 3973 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6356 754 M
0 63 V
0 3910 R
0 -63 V
stroke
6356 494 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 1200)]
] -86.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1389 4727 N
0 -3973 V
4967 0 V
0 3973 V
-4967 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
635 2740 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 260.0 0.0 true true 0 (INT Path Number)]
] -86.7 MCshow
grestore
LTb
LCb setrgbcolor
3872 182 M
[ [(Helvetica) 260.0 0.0 true true 0 (Switch Number \(LeafSpine\))]
] -86.7 MCshow
LTb
% Begin plot #1
2.500 UP
1.000 UL
LTb
0.90 0.12 0.06 C LCb setrgbcolor
3467 4381 M
[ [(Helvetica) 200.0 0.0 true true 0 (MDCPP-20%-Density)]
] -66.7 MRshow
2.500 UP
1.000 UL
LTb
0.90 0.12 0.06 C 3587 4381 M
543 0 V
1414 764 M
112 10 V
111 -10 V
112 40 V
112 -40 V
112 79 V
111 -79 V
112 119 V
2308 764 L
112 149 V
2531 764 L
112 189 V
2755 764 L
112 218 V
2978 764 L
112 258 V
3202 764 L
112 298 V
3425 764 L
112 328 V
3649 764 L
112 367 V
3873 764 L
111 397 V
4096 764 L
112 437 V
4320 764 L
111 477 V
4543 764 L
112 506 V
4767 764 L
111 546 V
4990 764 L
112 576 V
5214 764 L
111 616 V
5437 764 L
112 655 V
5661 764 L
111 685 V
5884 764 L
112 725 V
6108 764 L
111 755 V
1414 764 DiaF
1526 774 DiaF
1637 764 DiaF
1749 804 DiaF
1861 764 DiaF
1973 843 DiaF
2084 764 DiaF
2196 883 DiaF
2308 764 DiaF
2420 913 DiaF
2531 764 DiaF
2643 953 DiaF
2755 764 DiaF
2867 982 DiaF
2978 764 DiaF
3090 1022 DiaF
3202 764 DiaF
3314 1062 DiaF
3425 764 DiaF
3537 1092 DiaF
3649 764 DiaF
3761 1131 DiaF
3873 764 DiaF
3984 1161 DiaF
4096 764 DiaF
4208 1201 DiaF
4320 764 DiaF
4431 1241 DiaF
4543 764 DiaF
4655 1270 DiaF
4767 764 DiaF
4878 1310 DiaF
4990 764 DiaF
5102 1340 DiaF
5214 764 DiaF
5325 1380 DiaF
5437 764 DiaF
5549 1419 DiaF
5661 764 DiaF
5772 1449 DiaF
5884 764 DiaF
5996 1489 DiaF
6108 764 DiaF
6219 1519 DiaF
3858 4381 DiaF
% End plot #1
% Begin plot #2
2.500 UP
1.000 UL
LTb
0.00 0.45 0.70 C LCb setrgbcolor
3467 4181 M
[ [(Helvetica) 200.0 0.0 true true 0 (MDCPP-50%-Density)]
] -66.7 MRshow
2.500 UP
1.000 UL
LTb
0.00 0.45 0.70 C 3587 4181 M
543 0 V
1414 764 M
112 40 V
111 -40 V
112 129 V
1861 764 L
112 218 V
2084 764 L
112 308 V
2308 764 L
112 397 V
2531 764 L
112 487 V
2755 764 L
112 576 V
2978 764 L
112 665 V
3202 764 L
112 755 V
3425 764 L
112 844 V
3649 764 L
112 934 V
3873 764 L
111 1023 V
4096 764 L
112 1112 V
4320 764 L
111 1202 V
4543 764 L
112 1291 V
4767 764 L
111 1381 V
4990 764 L
112 1470 V
5214 764 L
111 1559 V
5437 764 L
112 1649 V
5661 764 L
111 1738 V
5884 764 L
112 1828 V
6108 764 L
111 1917 V
1414 764 Circle
1526 804 Circle
1637 764 Circle
1749 893 Circle
1861 764 Circle
1973 982 Circle
2084 764 Circle
2196 1072 Circle
2308 764 Circle
2420 1161 Circle
2531 764 Circle
2643 1251 Circle
2755 764 Circle
2867 1340 Circle
2978 764 Circle
3090 1429 Circle
3202 764 Circle
3314 1519 Circle
3425 764 Circle
3537 1608 Circle
3649 764 Circle
3761 1698 Circle
3873 764 Circle
3984 1787 Circle
4096 764 Circle
4208 1876 Circle
4320 764 Circle
4431 1966 Circle
4543 764 Circle
4655 2055 Circle
4767 764 Circle
4878 2145 Circle
4990 764 Circle
5102 2234 Circle
5214 764 Circle
5325 2323 Circle
5437 764 Circle
5549 2413 Circle
5661 764 Circle
5772 2502 Circle
5884 764 Circle
5996 2592 Circle
6108 764 Circle
6219 2681 Circle
3858 4181 Circle
% End plot #2
% Begin plot #3
2.500 UP
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
3467 3981 M
[ [(Helvetica) 200.0 0.0 true true 0 (MDCPP-80%-Density)]
] -66.7 MRshow
2.500 UP
1.000 UL
LTb
0.58 0.00 0.83 C 3587 3981 M
543 0 V
1414 764 M
112 69 V
111 -69 V
112 218 V
1861 764 L
112 358 V
2084 764 L
112 506 V
2308 764 L
112 646 V
2531 764 L
112 785 V
2755 764 L
112 934 V
2978 764 L
112 1073 V
3202 764 L
112 1222 V
3425 764 L
112 1361 V
3649 764 L
112 1500 V
3873 764 L
111 1649 V
4096 764 L
112 1788 V
4320 764 L
111 1937 V
4543 764 L
112 2076 V
4767 764 L
111 2215 V
4990 764 L
112 2364 V
5214 764 L
111 2503 V
5437 764 L
112 2652 V
5661 764 L
111 2791 V
5884 764 L
112 2930 V
6108 764 L
111 3079 V
1414 764 Box
1526 833 Box
1637 764 Box
1749 982 Box
1861 764 Box
1973 1122 Box
2084 764 Box
2196 1270 Box
2308 764 Box
2420 1410 Box
2531 764 Box
2643 1549 Box
2755 764 Box
2867 1698 Box
2978 764 Box
3090 1837 Box
3202 764 Box
3314 1986 Box
3425 764 Box
3537 2125 Box
3649 764 Box
3761 2264 Box
3873 764 Box
3984 2413 Box
4096 764 Box
4208 2552 Box
4320 764 Box
4431 2701 Box
4543 764 Box
4655 2840 Box
4767 764 Box
4878 2979 Box
4990 764 Box
5102 3128 Box
5214 764 Box
5325 3267 Box
5437 764 Box
5549 3416 Box
5661 764 Box
5772 3555 Box
5884 764 Box
5996 3694 Box
6108 764 Box
6219 3843 Box
3858 3981 Box
% End plot #3
% Begin plot #4
2.500 UP
1.000 UL
LTb
0.00 0.00 0.00 C LCb setrgbcolor
3467 3781 M
[ [(Helvetica) 200.0 0.0 true true 0 (Euler)]
] -66.7 MRshow
2.500 UP
1.000 UL
LTb
0.00 0.00 0.00 C 3587 3781 M
543 0 V
1414 764 M
112 99 V
111 -99 V
112 278 V
1861 764 L
112 457 V
2084 764 L
112 636 V
2308 764 L
112 814 V
2531 764 L
112 993 V
2755 764 L
112 1172 V
2978 764 L
112 1351 V
3202 764 L
112 1530 V
3425 764 L
112 1708 V
3649 764 L
112 1887 V
3873 764 L
111 2066 V
4096 764 L
112 2245 V
4320 764 L
111 2423 V
4543 764 L
112 2602 V
4767 764 L
111 2781 V
4990 764 L
112 2960 V
5214 764 L
111 3139 V
5437 764 L
112 3317 V
5661 764 L
111 3496 V
5884 764 L
112 3675 V
6108 764 L
111 3854 V
1414 764 TriU
1526 863 TriU
1637 764 TriU
1749 1042 TriU
1861 764 TriU
1973 1221 TriU
2084 764 TriU
2196 1400 TriU
2308 764 TriU
2420 1578 TriU
2531 764 TriU
2643 1757 TriU
2755 764 TriU
2867 1936 TriU
2978 764 TriU
3090 2115 TriU
3202 764 TriU
3314 2294 TriU
3425 764 TriU
3537 2472 TriU
3649 764 TriU
3761 2651 TriU
3873 764 TriU
3984 2830 TriU
4096 764 TriU
4208 3009 TriU
4320 764 TriU
4431 3187 TriU
4543 764 TriU
4655 3366 TriU
4767 764 TriU
4878 3545 TriU
4990 764 TriU
5102 3724 TriU
5214 764 TriU
5325 3903 TriU
5437 764 TriU
5549 4081 TriU
5661 764 TriU
5772 4260 TriU
5884 764 TriU
5996 4439 TriU
6108 764 TriU
6219 4618 TriU
3858 3781 TriU
% End plot #4
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1389 4727 N
0 -3973 V
4967 0 V
0 3973 V
-4967 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
